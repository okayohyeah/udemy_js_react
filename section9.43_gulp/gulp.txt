Gulp:
  - similar to Grunt
  - Streaming build system
  - lots of plugins and automates tasks

gulpfile.js
  - list of tasks 
      - are JavaScript but do specific things based on what is imported
      - pipes in directories/files and runs a job on them
        -syntax like Promises instead of .then uses .pipe
          
          gulp.task('sass', function() {
            return gulp.src('app/scss/**/*scss')
              .pipe(sass().on('error', sass.logError))
              .pipe(gulp.dest('app/css'))
              .pipe(browerSync.reload({
                stream: true
              }));
          })    

Sources: 
  https://gulpjs.com
  https://github.com/zellwk/gulp-starter-csstricks  


My Portfolio: Gulp Activity

1. $ cd gulp_activity
2. $ npm init
3. $ npm install gulp 
4. $ touch gulpfile.js
  a. require gulp
  b. create 'default' task

5. $ gulp
    [17:36:56] Using gulpfile ~/Desktop/udemy_js_react/section9/gulp_activity/gulpfile.js
    [17:36:56] Starting 'default'...
    hello world
    [17:36:56] Finished 'default' after 264 Î¼s

6. $ npm install handlebars gulp-compile-handlebars gulp-rename
  - handlebars.js: templating language
  - gulp-compile-handlebars: gulp plugin that compiles handlebars templates
  - gulp-rename: renames files

7. directory "partials" have all of our handlebars files (.hbs) that are all part of the index.hbs file
  - ie. {{> head}} is the head.hbs partial templates in the index.hbs

8. create 'html' task in gulpfile.js
  - require handlebars and rename

9. $ gulp html
  - run 'html' task

    [19:37:26] Using gulpfile ~/Desktop/udemy_js_react/section9/gulp_activity/gulpfile.js
    [19:37:26] Starting 'html'...
    [19:37:26] Finished 'html' after 110 ms

10. check into root file for index.html

11. $ open index.html
  - look at index.html in browser

12. $ touch index.js
  x create index.js

13. TODO: 
  x create event listeners in index.js
      x mouseover & mouseoff - buttons

  x add gulp task to uglify the js
      x $ npm install gulp-uglify
      x require uglify
      x create 'compress' task
        source: 
          https://www.npmjs.com/package/gulp-uglify
      x $ npm install pump
        x require pump in gulp.js
          * it handles success and failures of tasks easily (shorthand)
          source: 
            https://github.com/terinjokes/gulp-uglify/blob/master/docs/why-use-pump/README.md#why-use-pump

  x add compress task
      x $ npm install gulp-compress
      x  $ gulp compress
  
  x update partials or add own with work made 
  in this class
  
  x add clean-css package
      x $ npm install gulp-clean-css
      x add minify-css task
      x $ gulp minify-css
  